@model FSite.Models.RequestViewModel
@{
var TypeRequest = (FSite.Models.Enum.EnumTypeRequest)ViewBag.TypeRequest;
}
@using (Ajax.BeginForm("CustomerRequest", "Home",
                                             new AjaxOptions
                                             {
                                                 HttpMethod = "POST",
                                                 UpdateTargetId = $"box{TypeRequest}",
                                                 OnSuccess = $"fn_{TypeRequest}OnSuccess",
                                                 OnFailure = $"fn_{TypeRequest}OnFailure"
                                             },
                                             new { @class = "request-to-item-form form space-xs", @id = $"_Form{TypeRequest}", @name = $"_Form{TypeRequest}" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Hidden("TypeRequest", TypeRequest)
    @Html.Hidden("DefaultContent", Model.Content)
    <div class="row">
        @*<div class="col-sm-12">
                <div class="row">
                    <p class="col-md-6 col-sm-6">
                        @Html.EditorFor(c => c.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = @FSite.Resources.Resource.FCustomerName } })
                        @Html.ValidationMessageFor(c => c.FullName, "", new { @class = "text-danger" })
                    </p>
                    <p class="col-md-6 col-sm-6">
                        @Html.EditorFor(c => c.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = @FSite.Resources.Resource.FCustomerPhone } })
                        @Html.ValidationMessageFor(c => c.Phone, "", new { @class = "text-danger" })
                    </p>
                </div>
            </div>

            <div class="col-sm-4">
                @Html.EditorFor(c => c.Email, new { htmlAttributes = new { @class = "form-control sm-margin-bottom-10", @placeholder = @FSite.Resources.Resource.FEmail } })
                @Html.ValidationMessageFor(c => c.Email, "", new { @class = "text-danger" })
            </div>*@
        <div class="col-sm-12">
            <div class="row">
                <p class="col-md-4 col-sm-6">
                    @Html.EditorFor(c => c.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = @FSite.Resources.Resource.FCustomerName } })
                    @Html.ValidationMessageFor(c => c.FullName, "", new { @class = "text-danger" })
                </p>
                <p class="col-md-3 col-sm-6">
                    @Html.EditorFor(c => c.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = @FSite.Resources.Resource.FCustomerPhone } })
                    @Html.ValidationMessageFor(c => c.Phone, "", new { @class = "text-danger" })
                </p>
                <p class="col-md-3 col-sm-6">
                    @Html.EditorFor(c => c.Email, new { htmlAttributes = new { @class = "form-control sm-margin-bottom-10", @placeholder = @FSite.Resources.Resource.FEmail } })
                    @Html.ValidationMessageFor(c => c.Email, "", new { @class = "text-danger" })
                </p>
                <p class="col-md-2 col-sm-6">
                    @Html.EditorFor(c => c.RequestDate, new { htmlAttributes = new { @class = "form-control cdate", @placeholder = @FSite.Resources.Resource.RequesterDate } })
                    @*<div class="input-group date sm-margin-bottom-10">
                            <input class="form-control" value="02-16-2020" id="dp" type="text"> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                        </div>*@
                    @Html.ValidationMessageFor(c => c.RequestDate, "", new { @class = "text-danger" })
                </p>
            </div>
        </div>

    </div>
    <!-- /row -->
    <div class="row margin-bottom-10">
        <div class="col-sm-12">
            @*<textarea class="form-control customer-content" cols="20" data-val="true" data-val-maxlength="Nội dung không được > 2000 ký tự" data-val-maxlength-max="2000" data-val-required="Nội dung không được rỗng" id="Content" name="Content" placeholder="Nội dung" rows="4">Xin chào ! Tôi có hứng thú tìm hiểu thêm về Bất Động Sản số . Vui lòng liên hệ tôi sớm nhất. Cảm ơn!</textarea>*@
            @Html.TextAreaFor(c => c.Content, new { @class = "form-control customer-content", @placeholder = "Nội dung" })
            @Html.ValidationMessageFor(c => c.Content, "", new { @class = "text-danger" })
        </div>
        <!-- /.col 1 -->
    </div>
    <!-- /row -->
    <div class="row">
        <!-- /.col 3 -->
        <div class="col-sm-2 pull-right">
            @*<a class="btn btn-default btn-block" href="#">@FSite.Resources.Resource.btBook</a>*@

            <button type="submit" class="btn btn-primary btn-block">@FSite.Resources.Resource.btBook</button>
            @*<button type="reset" class="btn btn-warning" name="reset" id="reset">reset</button>*@
        </div>


        <!-- /.col 1 -->
    </div>



}
